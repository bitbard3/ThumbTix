// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  address String @unique
  tasks Task[]
}

model Task{
  id Int @id @default(autoincrement())
  title String @default("Select the most clickable thumbnail")
  amount BigInt
  paymentSignature String
  options Option[]
  userId Int
  user User @relation(fields: [userId],references: [id])
  submissions Submission[]
  done Boolean @default(false)
}

model Option{
  id Int @id @default(autoincrement())
  imageUrl String
  taskId Int 
  task Task @relation(fields: [taskId],references: [id])
  submissions Submission[]
}


model Worker{
  id Int @id @default(autoincrement())
  address String @unique
  submissions Submission[]
  balanceId Int @unique
  balance Balance @relation(fields: [balanceId],references: [id])
}

model Submission{
  id Int @id @default(autoincrement())
  workerId Int
  taskId Int
  optionId Int
  amount BigInt
  worker Worker @relation(fields: [workerId],references: [id])
  task  Task @relation(fields: [taskId],references: [id])
  option Option @relation(fields: [optionId],references: [id])
}

model Balance{
  id Int @id @default(autoincrement())
  pendingAmount BigInt
  lockedAmount BigInt
  worker Worker?
}
